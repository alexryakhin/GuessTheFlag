//
//  ContentView.swift
//  GuessTheFlag
//
//  Created by Alexander Bonney on 4/20/21.
//

import SwiftUI

struct FlagImage: View {
    var image: String
    
    var body: some View {
        Image(image)
            .renderingMode(.original)
            .clipShape(Capsule())
            .overlay(Capsule().stroke(Color.black, lineWidth: 1))
            .shadow(color: .black, radius: 2, x: 0.0, y: 0.0)
    }
}


struct ContentView: View {
    @State private var countries = ["Estonia","France","Germany","Ireland","Italy","Monaco","Nigeria","Poland","Russia","Spain","UK","US"].shuffled()
    @State private var correctAnswer = Int.random(in: 0...2)
    @State private var showingScore = false
    @State private var scoreTitle = ""
    @State private var scoreNumber = 0
    
    @State private var angle: Double = 0
    @State private var opacity: Double = 1
    
    @State private var colors = [Color.blue, Color.purple]
    
    
    
    var body: some View {
        ZStack {
            LinearGradient(gradient: Gradient(colors: colors), startPoint: .top, endPoint: .bottom)
                .edgesIgnoringSafeArea(.all)
//                .animation(.easeIn)
            VStack(spacing: 30) {
                VStack {
                    Text("Tap the flag of").foregroundColor(.white).font(.title)
                    Text(countries[correctAnswer]).foregroundColor(.white).font(.largeTitle).fontWeight(.black)
                }
                
                //I just put the command that creating a button with rotation effect on it if the number of the button is the same with my correctAnswer which is randomly generated by computer
                
                ForEach(0..<3) { number in
                    //if correct flag was chosen
                    if number == correctAnswer {
                        Button(action: {
                            //flag was tapped
                            flagTapped(number)
                        }, label: {
                            FlagImage(image: self.countries[number])
                        })
                        .rotationEffect(.degrees(angle))
                        .animation(.easeIn)
                    } else {
                        Button(action: {
                            //flag was tapped
                            flagTapped(number)
                        }, label: {
                            FlagImage(image: self.countries[number])
                        })
                        .opacity(opacity)
                        .animation(.easeIn)
                    }
                }
                
                Text("Score: \(scoreNumber)").foregroundColor(.white).font(.title)
                Spacer()
            }
        }
        .alert(isPresented: $showingScore, content: {
            Alert(title: Text(scoreTitle), message: Text("Your score is \(scoreNumber)"), dismissButton: .default(Text("Continue")) {
                withAnimation(.easeIn) {
                    askQuestion()
                }
            })
        })
    }
    
    func flagTapped(_ number: Int) {
        if number == correctAnswer {
            scoreTitle = "Correct"
            scoreNumber += 1
            angle += 360
            opacity = 0.75
            colors = [Color.green, Color.green]
        } else {
            scoreTitle = "Incorrect, you tapped flag of \(countries[number])"
            scoreNumber -= 1
            colors = [Color.red, Color.red]
            if scoreNumber < 0 {
                scoreNumber = 0
            }
        }
        
        showingScore = true
    }
    
    func askQuestion() {
        colors = [Color.blue, Color.purple]
        countries.shuffle()
        correctAnswer = Int.random(in: 0...2)
//        angle = 0
        opacity = 1
    }
}


struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
